ajrc

Name: Alberto Rigail

Assigment No: 3

Contribution:
I worked solo on this assignment, by coding the programs as indicated by the website specifications. Since my code from the previous assignment was modular and had clear comments, I focused entirely on the main Flask logic. I could leverage the database access functions in database.py and getCourse.py and getClassDetails.py, including other classes. First, my code from runserver.py was super similar to the one provided in lecture, since all my routes are defined in regserver.py.

Regserver.py contains most of the logic of my code, with two main methods index() and regdetails(). These two functions support all the main application use cases by calling external modules, as well as the error handling, as described in the course website.


External help:
I received no external help in this assignment.

Sources referenced:
In this assignment, I followed the course policies and guidelines for referencing external information. Moreover, I used the following sources:
- The first source helped me to figure out submitting the form after changing the text
https://www.javatpoint.com/jquery-change#:~:text=%E2%86%92%20%E2%86%90%20prev-,jQuery%20change(),boxes%20and%20elements.
- Most of the boostrap code had as a reference the PennyBoostrap application from this course
- Most of the jquery/ajax code had as a reference the PennyJQuery application from this course
- For Boostrap column layouts (used for displaying the course results), I used the following source:
https://getbootstrap.com/docs/4.0/content/tables/




Time spent in this assignment: 6 hours

My assessment:
This assignment helped me to internalize learning from lectures in Flask and Jinja2, since watching the lectures is not enough. I believe that coding a website myself, using an MVC architecture, is essential for my future web development endeavors. I believe this assignment is perfect and nothing should be changed for future years.